/**********************************************************************************************************
** 文件名: 		Cloud_IOT_200_Driver.h
** 版本：  		1.0
** 工作环境: 	RealView MDK-ARM 4.20
** 作者: 		盖书永 
** 生成日期: 	2011-04-10
** 功能:		Cloud IOT-200设备底层驱动
** 相关文件:	无
** 修改日志：	 
**********************************************************************************************************/
#ifndef __Cloud_IOT_200_Driver_H
#define __Cloud_IOT_200_Driver_H
#include "stm32f4xx.h"

#define		LED_RUN_OFF			GPIOD->BSRRH = GPIO_Pin_13  
#define		LED_RUN_ON			GPIOD->BSRRL = GPIO_Pin_13 

/**********************************************************************************************************
* 函数名称： void Switch_Init(void)
* 函数说明： 开关量初始化
* 输入参数： 无
* 返回参数： 无
**********************************************************************************************************/
void Switch_Init(void);

/*******************************************************************************
* 函数名称： void Set_Input_LED_Status(int addr, int status)
* 函数说明： 设置开关量输入LED状态
* 输入参数： LED地址，状态
* 返回参数： 无
*******************************************************************************/
void Set_Input_LED_Status(int addr, int status);

/*******************************************************************************
* 函数名称： void Set_Output_LED_Status(int addr, int status)
* 函数说明： 设置开关量输出LED状态
* 输入参数： LED地址，状态
* 返回参数： 无
*******************************************************************************/
void Set_Output_LED_Status(int addr, int status);

/*******************************************************************************
* 函数名称： int Read_switch_input_status(int addr)
* 函数说明： 读取开关量输入状态
* 输入参数： 开关量地址号
* 返回参数： 状态
*******************************************************************************/
int Read_switch_input_status(int addr);

/*******************************************************************************
* 函数名称： void Write_switch_output_status(int addr, int status)
* 函数说明： 置开关量输出状态
* 输入参数： 开关量地址号, 设置状态
* 返回参数： 无
*******************************************************************************/
void Write_switch_output_status(int addr, int status);
#endif


